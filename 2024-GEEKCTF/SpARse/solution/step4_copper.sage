from Crypto.Util.number import *

n = 26191564571207865803659079386216562920365743937051163433571210679225063647091082587257715669756485899193035208469976035738059784724348440070923338255026181997563861328562376469415513279917957395542741541429134095225386135220540927874676394354088360479481955915341958270722056286102261431573282803952793459642793864316123517546752697514637037955503796798930707520651108244395501602445588782475135899939892422822256499112247770956183176429072812823174574240664993265247180146106488076712548920459190957713108289707082714400895643134613721697077267869186086353168834023098632217473990464991482806559422568127693472179449
pl = int

PR.<x> = PolynomialRing(Zmod(n))
f = 2^700*x + pl
f = f.monic()
res = f.small_roots(X=2^324,beta=0.4)
print(res)

p = 2^700*27996439917383235383841028686373623677025754644523593251398561268422647849393297011015184428879646 + pl
q = n // p

print(f'p = ')
print(f'q = ')
