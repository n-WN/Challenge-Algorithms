from Crypto.Util.number import *

#dhbin = d[:1020]
n = 26191564571207865803659079386216562920365743937051163433571210679225063647091082587257715669756485899193035208469976035738059784724348440070923338255026181997563861328562376469415513279917957395542741541429134095225386135220540927874676394354088360479481955915341958270722056286102261431573282803952793459642793864316123517546752697514637037955503796798930707520651108244395501602445588782475135899939892422822256499112247770956183176429072812823174574240664993265247180146106488076712548920459190957713108289707082714400895643134613721697077267869186086353168834023098632217473990464991482806559422568127693472179449
dhbin = "****110111******011010******************************110111************111000******011000******011010************************************************************100111************************000010******110010******************001111************011010******111000******101011010111************101001******111010******************************************************110001******************101011110011110011******011100******010111************************************************************************************110010101001************************011100************000101101100************************************************************************************************************************100011001100************************************111001******011010000110101111******000000******************************101101000010000011******001011******************101001011000110011101100******************011111******100101100010******************000101******************************************************10111110"
e = 65537
############################################ part2 solve k and get d high
k = 0
for i in range(1,e):
    tt = bin(i*n // e)[2:].zfill(2048)[:1020]

    FOUND = 1
    for j in range(1020):
        if(dhbin[j] == "*"):
            continue
        if(tt[j] != dhbin[j]):
            FOUND = 0
            break
    if(FOUND == 1):
        k = i
        break
print(k)

############################################ part3 solve kp,kq
PR.<x> = PolynomialRing(Zmod(e))
f = x^2 - (k*(n-1)+1)*x - k
res = f.roots()
print(res)

#[(64743, 1), (30590, 1)]